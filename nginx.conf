worker_processes 4;
events {
  worker_connections 256;
}

http {
  include mime.types;
  default_type application/octet-stream;
  gzip on;

  ssl_protocols TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
  ssl_prefer_server_ciphers on;
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

  log_format http 'HTTP  [$status] $server_name:$server_port; $request; origin $remote_addr:$remote_port; req_length $request_length; accept "$http_accept"; referrer "$http_referer"; user agent "$http_user_agent"; sent $bytes_sent bytes';
  log_format https 'HTTPS [$status] $server_name:$server_port; $request; origin $remote_addr:$remote_port; req_length $request_length; protocol $ssl_protocol; cipher $ssl_cipher; accept "$http_accept"; referrer "$http_referer"; user agent "$http_user_agent"; sent $bytes_sent bytes';
  error_log syslog:server=unix:/dev/log warn;
  access_log syslog:server=unix:/dev/log http;
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;
  server_tokens off;

  server {
    listen 80;
    return 404;
  }

  server {
    listen 80;
    server_name HOSTNAME;
    root STATICDIR;

    location ~* (COPYING|README.md)$ {
      default_type text/plain;
    }

    location /_beehive/ {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass http://127.0.0.1:BACKENDPORT;
    }
  }

  server {
    listen 443 ssl;
    server_name HOSTNAME;
    ssl_certificate /etc/letsencrypt/live/HOSTNAME/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/HOSTNAME/privkey.pem;
    access_log syslog:server=unix:/dev/log https;
    root STATICDIR;

    location ~* (COPYING|README.md)$ {
      default_type text/plain;
    }

    location /_beehive/ {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass http://127.0.0.1:BACKENDPORT;
    }
  }
}
